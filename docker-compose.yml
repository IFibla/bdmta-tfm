services:
  # dashboard:
  #   container_name: dashboard
  #   build: DataDash/
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     internal-network:
  #       ipv4_address: 10.5.0.2

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      internal-network:
        ipv4_address: 10.5.0.2

  data-ingestion:
    container_name: data-ingestion
    build: data-ingestion/
    env_file:
      - dev.env
    ports:
      - "20777:20777/udp"
    networks:
      internal-network:
        ipv4_address: 10.5.0.3

  data-serving:
    container_name: data-serving
    build: data-serving/
    ports:
      - "30000:30000"
    env_file:
      - dev.env
    networks:
      internal-network:
        ipv4_address: 10.5.0.4

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      internal-network:
        ipv4_address: 10.5.0.5

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      internal-network:
        ipv4_address: 10.5.0.6

  data-managment-spark-master:
    build: data-managment/
    container_name: data-managment-spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8080:8080"
      - "4040:4040"
    volumes:
      - "/Users/ignasi/Documents/_00_BDMTA_/bdmta-tfm/data-managment:/home"
    networks:
      internal-network:
        ipv4_address: 10.5.0.8

  data-managment-spark-worker:
    build: data-managment/
    container_name: data-managment-spark-worker
    links:
      - "data-managment-spark-master:spark"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    depends_on:
      - data-managment-spark-master
    networks:
      internal-network:
        ipv4_address: 10.5.0.9

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      internal-network:
        ipv4_address: 10.5.0.10

networks:
  internal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

volumes:
  metabase-volume: